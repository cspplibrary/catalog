---
title: "CSPP Library Inventory"
execute:
  message: false
  error: false
  warning: false
  echo: false
format: 
  html:
    toc: false
    # link-external-icon: true
    link-external-newwindow: true
---



```{r}

library(tidyverse)
library(googledrive)
library(googlesheets4)
library(bslib)
library(bsicons)
library(gt)

library(gtExtras)

```


```{r}

# drive_auth(path = ".secret/cspp-client-secret.json")
# gs4_auth(path = ".secret/cspp-client-secret.json")

drive_auth(path = Sys.getenv("GOOGLE_AUTHENTICATION_CREDENTIALS"))

gs4_auth(path = Sys.getenv("GOOGLE_AUTHENTICATION_CREDENTIALS"))

ss1 <- drive_get(id = Sys.getenv("GOOGLE_SHEET_ID") 
)

physical_collection <-  read_sheet(ss1,
                                   sheet = "Physical Collection",
                                   skip = 1) %>% 
    janitor::clean_names() %>% 
  dplyr::filter(!is.na(title))

```

```{r}

physical_collection %>% 
  dplyr::select(title, author = author_last_name_first_name, 
                genre, sub_genres, language, publication_date, cover_type, format) %>% 
  gt() %>% 
  gt::opt_interactive(
    use_search = TRUE,
    use_filters = TRUE,
    use_sorting = TRUE,
    use_highlight = TRUE,
    use_compact_mode = TRUE,
    page_size_default = 20
  ) %>% 
  gt::tab_options(table.width = pct(100),
                      # table.font.color = "#FFFFFF",
    table.background.color = "#fce4ea",
    table.font.size = px(14),
    table.border.top.color = "transparent",
    table.border.bottom.color = "transparent",
    # table_body.hlines.color = "transparent",
    table_body.border.bottom.color = "transparent",
    column_labels.border.bottom.color = "transparent",
    column_labels.border.top.color = "transparent") %>% 
  gt::opt_css(
    css = "
    table tr:nth-child(odd) {
      background-color: #fce4ea;
    }
      
    table tr:hover {
      background-color: lightgrey;
    }
    
    .cell-output-display {
      overflow-x: unset !important;
    }
    
    div#custom {
      overflow-x: unset !important;
      overflow-y: unset !important;
    }
    
    #custom .gt_col_heading {
      position: sticky !important;
      top: -5px !important;
      z-index: 10 !important;
    }
    "
  )  
```


```{r}


book_list <-  physical_collection  %>%
  # means there is a check in the second column
  # dplyr::filter(here == TRUE) %>% 
  # convert to char columns from lists
  dplyr::mutate(
    # date_acquired = as.character(date_acquired),
    publisher = as.character(publisher)
    # publication_date = as.character(publication_date)
  ) %>%
  # remove missing rows
  dplyr::filter(!(is.na(title) & is.na(author_last_name_first_name))) 



# book_list %>% View()
#   dplyr::filter()
    
most_popular_author <- book_list %>% 
  dplyr::filter(author_last_name_first_name != "various",
                !is.na(author_last_name_first_name)) %>%   
  count(author_last_name_first_name, sort = T) %>% 
  dplyr::slice_head(n = 1) %>% 
  dplyr::pull(author_last_name_first_name)

num_books_by_most_pop_auth <-  book_list %>% 
  dplyr::filter(author_last_name_first_name != "various",
                !is.na(author_last_name_first_name)) %>% 
  count(author_last_name_first_name, sort = T) %>% 
  dplyr::slice_head(n = 1) %>% 
  dplyr::pull(n)

num_books <- book_list %>% 
  dplyr::distinct(title) %>% 
  nrow()

# book_list %>% 
#   dplyr::filter(title == "Palestine") %>%  View()

all_books <-  book_list %>% 
  distinct(title) %>% 
  arrange(title) %>% 
  dplyr::pull(title)

```

