---
title: "CSPP Library Inventory"
execute:
  message: false
  error: false
  warning: false
  echo: false
format: 
  html:
    toc: false
    # link-external-icon: true
    link-external-newwindow: true
---


```{r libraries}

library(tidyverse)
library(googledrive)
library(googlesheets4)
library(bslib)
library(bsicons)
library(gt)
library(gtExtras)

```


```{r connect}

# drive_auth(path = ".secret/cspp-client-secret.json")
# gs4_auth(path = ".secret/cspp-client-secret.json")

drive_auth(path = Sys.getenv("GOOGLE_AUTHENTICATION_CREDENTIALS"))

gs4_auth(path = Sys.getenv("GOOGLE_AUTHENTICATION_CREDENTIALS"))

ss1 <- drive_get(id = Sys.getenv("GOOGLE_SHEET_ID") 
)

physical_collection <-  read_sheet(ss1,
                                   sheet = "Physical Collection",
                                   skip = 1) %>% 
    janitor::clean_names() %>% 
  dplyr::filter(!is.na(title))


# 
# 
# physical_collection %>% 
#   # count(numbered) %>% 
#   dplyr::filter(numbered == "?") %>%  View()
# 
x <- physical_collection %>%
  dplyr::mutate(available_for_checkout = case_when(
    available_for_checkout == TRUE & literally_checked_out == FALSE ~ "Yes",
    available_for_checkout == FALSE | literally_checked_out == TRUE ~ "No",
    TRUE ~ "No"
  ))
  
# physical_collection %>% 
#   dplyr::count(available_for_checkout)

```

```{r num_books}


# book_list <-  physical_collection  %>%
#   # means there is a check in the second column
#   # dplyr::filter(here == TRUE) %>% 
#   # convert to char columns from lists
#   dplyr::mutate(
#     # date_acquired = as.character(date_acquired),
#     publisher = as.character(publisher)
#     # publication_date = as.character(publication_date)
#   ) %>%
#   # remove missing rows
#   dplyr::filter(!(is.na(title) & is.na(author_last_name_first_name))) 
# 


# book_list %>% View()
#   dplyr::filter()
    
# most_popular_author <- book_list %>% 
#   dplyr::filter(author_last_name_first_name != "various",
#                 !is.na(author_last_name_first_name)) %>%   
#   count(author_last_name_first_name, sort = T) %>% 
#   dplyr::slice_head(n = 1) %>% 
#   dplyr::pull(author_last_name_first_name)
# 
# num_books_by_most_pop_auth <-  book_list %>% 
#   dplyr::filter(author_last_name_first_name != "various",
#                 !is.na(author_last_name_first_name)) %>% 
#   count(author_last_name_first_name, sort = T) %>% 
#   dplyr::slice_head(n = 1) %>% 
#   dplyr::pull(n)
# 
# num_books <- book_list %>% 
#   dplyr::distinct(title) %>% 
#   nrow()

# book_list %>% 
#   dplyr::filter(title == "Palestine") %>%  View()

all_books <-  x %>% 
  distinct(title) %>% 
  arrange(title) %>% 
  dplyr::pull(title)

num_books <- nrow(x)

num_books_avail_checkout <-  x %>% 
  dplyr::filter(available_for_checkout == "Yes") %>% 
  nrow()


```


Below is a list of all the current books in the CSPP Library Inventory. You can search for key words in the upper right hand search bar or you can search within specific attributes such as book title, publication date, cover type, or whether the book is currently available for checkout. Right now there are **`r num_books_avail_checkout` books** available for checkout!



```{r book_list}

#| column: screen

x  %>% 
  dplyr::select(available_for_checkout, Title = title, Author = author_last_name_first_name, 
                Genre = genre, sub_genres, 
                Language = language, Publisher = publisher,
                publication_date, cover_type, 
                Format = format) %>% 
  gt() %>% 
  gt::opt_interactive(
    use_search = TRUE,
    use_filters = TRUE,
    use_sorting = TRUE,
    use_highlight = TRUE,
    use_compact_mode = TRUE,
    page_size_default = 10
  ) %>% 
  gt::cols_label(
    sub_genres = "Sub genre",
    publication_date = "Publication date",
    cover_type = "Cover Type",
    available_for_checkout = "Available for Checkout"
  ) %>% 
  gt::cols_align(
    align = "left",
    columns = c(publication_date, Publisher)
  ) %>%   
  gt::tab_style(style = cell_text(weight = "bold"),
            locations = cells_column_labels(
              columns = everything()
            )) %>%   
  gt::tab_options(table.width = pct(100),
                      # table.font.color = "#FFFFFF",
    table.background.color = "#fce4ea",
    table.font.size = px(14),
    table.border.top.color = "transparent",
    table.border.bottom.color = "transparent",
    # table_body.hlines.color = "transparent",
    table_body.border.bottom.color = "transparent",
    column_labels.border.bottom.color = "transparent",
    column_labels.border.top.color = "transparent") %>%
  gt::opt_css(css = "
    table tr:nth-child(odd) {
      background-color: #fce4ea;
    }
      
    table tr:hover {
      background-color: lightgrey;
    }
    
    .cell-output-display {
      overflow-x: unset !important;
    }
    
    div#custom {
      overflow-x: unset !important;
      overflow-y: unset !important;
    }
    
    #custom .gt_col_heading {
      position: sticky !important;
      top: -5px !important;
      z-index: 10 !important;
    }
    "
  )  
```

<br>

[![](images/cspplibrary-header.png){fig-align="center" width="634"}](https://www.instagram.com/cspplibrary/)


```{r gmailr}

# library(gmailr)
# 
# 
# 
# # plan
# # Since no one will ever check out a book at midnight, it's okay to write a script that pulls all the checkouts in the last 24 hours and auto sends an email
# 
# dev_check_out_form <-  read_sheet(ss1,
#                                    sheet = "Dev checkout form",
#                                    skip = 1) %>% 
#     janitor::clean_names() %>% 
#   dplyr::filter(!is.na(title))
# 
# 
# email <-
#         gm_mime() |>
#         gm_to(input$email_checkout) |>
#         gm_from("cspplibrary@gmail.com") |>
#         gm_subject("CSPP Library book checkout confirmation") |>
#         gm_text_body(paste0("Hello ", input$name_checkout, "!\nYou checked out the book ",
#                             input$pick_title_book,
#                             " on ", Sys.Date(), ". Please make sure to return the book by ",
#                             Sys.Date() + 30, "\nThank you!\nTHE CENTER FOR STUDY & PRESERVATION
# OF PALESTINE (CSPP)")
#                      )
# 
#       gm_send_message(email)
# 

```

